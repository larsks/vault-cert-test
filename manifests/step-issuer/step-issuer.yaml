---
# Source: crds/certmanager.step.sm_stepclusterissuers.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  name: stepclusterissuers.certmanager.step.sm
spec:
  group: certmanager.step.sm
  names:
    kind: StepClusterIssuer
    listKind: StepClusterIssuerList
    plural: stepclusterissuers
    singular: stepclusterissuer
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: StepClusterIssuer is the Schema for the stepclusterissuers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StepClusterIssuerSpec defines the desired state of StepClusterIssuer
            properties:
              caBundle:
                description: CABundle is a base64 encoded TLS certificate used to
                  verify connections to the step certificates server. If not set the
                  system root certificates are used to validate the TLS connection.
                format: byte
                type: string
              provisioner:
                description: Provisioner contains the step certificates provisioner
                  configuration.
                properties:
                  kid:
                    description: KeyID is the kid property of the JWK provisioner.
                    type: string
                  name:
                    description: Names is the name of the JWK provisioner.
                    type: string
                  passwordRef:
                    description: PasswordRef is a reference to a Secret containing
                      the provisioner password used to decrypt the provisioner private
                      key.
                    properties:
                      key:
                        description: The key of the secret to select from. Must be
                          a valid secret key.
                        type: string
                      name:
                        description: The name of the secret in the pod's namespace
                          to select from.
                        type: string
                      namespace:
                        description: The namespace of the secret in the pod's namespace
                          to select from.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                required:
                - kid
                - name
                - passwordRef
                type: object
              url:
                description: URL is the base URL for the step certificates instance.
                type: string
            required:
            - caBundle
            - provisioner
            - url
            type: object
          status:
            description: StepClusterIssuerStatus defines the observed state of StepClusterIssuer
            properties:
              conditions:
                items:
                  description: StepClusterIssuerCondition contains condition information
                    for the step issuer.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      allOf:
                      - enum:
                        - "True"
                        - "False"
                        - Unknown
                      - enum:
                        - "True"
                        - "False"
                        - Unknown
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      type: string
                    type:
                      description: Type of the condition, currently ('Ready').
                      enum:
                      - Ready
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/certmanager.step.sm_stepissuers.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  name: stepissuers.certmanager.step.sm
spec:
  group: certmanager.step.sm
  names:
    kind: StepIssuer
    listKind: StepIssuerList
    plural: stepissuers
    singular: stepissuer
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: StepIssuer is the Schema for the stepissuers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StepIssuerSpec defines the desired state of StepIssuer
            properties:
              caBundle:
                description: CABundle is a base64 encoded TLS certificate used to
                  verify connections to the step certificates server. If not set the
                  system root certificates are used to validate the TLS connection.
                format: byte
                type: string
              provisioner:
                description: Provisioner contains the step certificates provisioner
                  configuration.
                properties:
                  kid:
                    description: KeyID is the kid property of the JWK provisioner.
                    type: string
                  name:
                    description: Names is the name of the JWK provisioner.
                    type: string
                  passwordRef:
                    description: PasswordRef is a reference to a Secret containing
                      the provisioner password used to decrypt the provisioner private
                      key.
                    properties:
                      key:
                        description: The key of the secret to select from. Must be
                          a valid secret key.
                        type: string
                      name:
                        description: The name of the secret in the pod's namespace
                          to select from.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - kid
                - name
                - passwordRef
                type: object
              url:
                description: URL is the base URL for the step certificates instance.
                type: string
            required:
            - caBundle
            - provisioner
            - url
            type: object
          status:
            description: StepIssuerStatus defines the observed state of StepIssuer
            properties:
              conditions:
                items:
                  description: StepIssuerCondition contains condition information
                    for the step issuer.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      allOf:
                      - enum:
                        - "True"
                        - "False"
                        - Unknown
                      - enum:
                        - "True"
                        - "False"
                        - Unknown
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      type: string
                    type:
                      description: Type of the condition, currently ('Ready').
                      enum:
                      - Ready
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: step-issuer/templates/rbac/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "step-issuer-manager-role"
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["get", "list", "update", "watch"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests/status"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepissuers"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepclusterissuers"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepissuers/status"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepclusterissuers/status"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["cert-manager.io"]
  resources: ["signers"]
  verbs: ["approve"]
  resourceNames:
    - stepissuers.certmanager.step.sm/*
    - stepclusterissuers.certmanager.step.sm/*
- apiGroups: [ "coordination.k8s.io" ]
  resources: [ "leases" ]
  verbs: [ "create", "get", "list", "update" ]
---
# Source: step-issuer/templates/rbac/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "step-issuer-proxy-role"
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: step-issuer/templates/rbac/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "step-issuer-approver-role"
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - signers
  verbs:
  - approve
  resourceNames:
  - stepissuers.certmanager.step.sm/*
  - stepclusterissuers.certmanager.step.sm/*
---
# Source: step-issuer/templates/rbac/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "step-issuer-manager-rolebinding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "step-issuer-manager-role"
subjects:
- kind: ServiceAccount
  name: default
  namespace: step-issuer
---
# Source: step-issuer/templates/rbac/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "step-issuer-proxy-rolebinding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "step-issuer-proxy-role"
subjects:
- kind: ServiceAccount
  name: default
  namespace: step-issuer
---
# Source: step-issuer/templates/rbac/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "step-issuer-approver-rolebinding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "step-issuer-approver-role"
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
# Source: step-issuer/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "step-issuer-leader-election-role"
  namespace: step-issuer
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get" ,"list" ,"watch" ,"create" ,"update" ,"patch" ,"delete"]
- apiGroups: [""]
  resources: ["configmaps/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update"]
---
# Source: step-issuer/templates/rbac/roleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "step-issuer-leader-election-rolebinding"
  namespace: step-issuer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "step-issuer-leader-election-role"
subjects:
- kind: ServiceAccount
  name: default
  namespace: step-issuer
---
# Source: step-issuer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "step-issuer"
  namespace: step-issuer
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scheme: "https"
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
    helm.sh/chart: step-issuer-1.8.0
    app.kubernetes.io/name: step-issuer
    app.kubernetes.io/instance: step-issuer
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: step-issuer
    app.kubernetes.io/instance: step-issuer
    control-plane: controller-manager
---
# Source: step-issuer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "step-issuer"
  namespace: step-issuer
  labels:
    control-plane: controller-manager
    helm.sh/chart: step-issuer-1.8.0
    app.kubernetes.io/name: step-issuer
    app.kubernetes.io/instance: step-issuer
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: step-issuer
      app.kubernetes.io/instance: step-issuer
  template:
    metadata:
      labels:
        control-plane: controller-manager
        helm.sh/chart: step-issuer-1.8.0
        app.kubernetes.io/name: step-issuer
        app.kubernetes.io/instance: step-issuer
        app.kubernetes.io/version: "0.8.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
      - image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0"
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        args: ["--secure-listen-address=0.0.0.0:8443", "--upstream=http://127.0.0.1:8080/", "--logtostderr=true", "--v=10"]
        ports:
        - containerPort: 8443
          name: https
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
      - image: "cr.step.sm/smallstep/step-issuer:0.8.0"
        imagePullPolicy: IfNotPresent
        name: manager
        args: [
          "--metrics-addr=127.0.0.1:8080",
          "--enable-leader-election",
        ]
        command: ["/manager"]
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
      volumes:
      terminationGracePeriodSeconds: 10
      securityContext:
        {}
